####################################################################
#Heteroscedasticidad y Error de Especificacion
####################################################################
#Limpiar espacio de trabajo
cat("\014")
rm(list = ls())
library(scales)
set.seed(160925)
x <- runif(1000, 0, 10)
e <- rnorm(1000, 0, 1)
#Error de especificación: variable independiente
beta0 <- 10
beta1 <- 0.4
beta2 <- -0.05
y <- beta0 + beta1*x + beta2*x^2 + e
u <- e + beta2*x^2
plot(x, e, col = alpha("ivory4", 0.5), ylim = c(-9, 3), pch = 19, xlab = "x", ylab = " ")
points(x, u, col = alpha("maroon", 0.5), pch = 18)
legend("bottomleft", legend=c("e", "u"), col=c("ivory4", "maroon"), pch=c(19, 18), cex=0.8)
#Error de especificación: variable dependiente
x <- runif(1000, 0, 1)
e <- runif(1000, 0, 2)
beta0 <- 0
beta1 <- 1
y <- exp(beta0 + beta1*x + e)
summary(y)
plot(x, log(y), col = alpha("ivory4", 0.5), pch = 19,
ylim = c(-10, 20), xlab = "x", ylab = " ")
points(x, y, col = alpha("maroon", 0.5), pch = 18)
legend("topleft", legend=c("log(y)", "y"), col=c("ivory4", "maroon"), pch=c(19, 18), cex=0.8)
#Limpiar espacio de trabajo
cat("\014")
rm(list = ls())
#Datos
install.packages('haven')
#Limpiar espacio de trabajo
cat("\014")
rm(list = ls())
install.packages('haven')
install.packages("sandwich")
install.packages("lmtest")
library('haven')
library('sandwich')
library('lmtest')
link_datos <- 'https://www.dropbox.com/scl/fi/vy1cw4zkgm3op6pzd7lau/skills_data.dta?rlkey=p11n80lk68nzkqigt2dhbtyl9&dl=1'
datos <- read_dta(link_datos)
attach(datos)
# Ejemplo: ajustar un modelo de regresión lineal
model <- lm(ln_fst_wage ~ lit + num + eng
+ program_type_1 + program_type_4 + program_type_3
+ female + age + age_2 + factor(stratum) + factor(educ_madre) + factor(study_field) + factor(test_edition) + factor(grad_year))
summary(model)
matriz_cov_robusta <- vcovHC(model)
coeftest(model, vcov = matriz_cov_robusta)
####################################################################
#Heteroscedasticidad y Error de Especificacion
####################################################################
#Limpiar espacio de trabajo
cat("\014")
rm(list = ls())
library(scales)
set.seed(160925)
x <- runif(1000, 0, 10)
e <- rnorm(1000, 0, 1)
#Error de especificación: variable independiente
beta0 <- 10
beta1 <- 0.4
beta2 <- -0.05
y <- beta0 + beta1*x + beta2*x^2 + e
u <- e + beta2*x^2
plot(x, e, col = alpha("ivory4", 0.5), ylim = c(-9, 3), pch = 19, xlab = "x", ylab = " ")
points(x, u, col = alpha("maroon", 0.5), pch = 18)
legend("bottomleft", legend=c("e", "u"), col=c("ivory4", "maroon"), pch=c(19, 18), cex=0.8)
x <- runif(1000, 0, 1)
e <- runif(1000, 0, 2)
beta0 <- 0
beta1 <- 1
y <- exp(beta0 + beta1*x + e)
summary(y)
plot(x, log(y), col = alpha("ivory4", 0.5), pch = 19,
ylim = c(-10, 20), xlab = "x", ylab = " ")
points(x, y, col = alpha("maroon", 0.5), pch = 18)
legend("topleft", legend=c("log(y)", "y"), col=c("ivory4", "maroon"), pch=c(19, 18), cex=0.8)
model_het <- lm(y ~ x)
summary(model_het)
model_hom <- lm(log(y) ~ x)
summary(model_hom)
#Limpiar espacio de trabajo
cat("\014")
rm(list = ls())
library(scales)
set.seed(160925)
x <- runif(1000, 0, 10)
e <- rnorm(1000, 0, 1)
#Error de especificación: variable independiente
beta0 <- 10
beta1 <- 0.4
beta2 <- -0.05
y <- beta0 + beta1*x + beta2*x^2 + e
u <- e + beta2*x^2
plot(x, e, col = alpha("ivory4", 0.5), ylim = c(-9, 3), pch = 19, xlab = "x", ylab = " ")
points(x, u, col = alpha("maroon", 0.5), pch = 18)
legend("bottomleft", legend=c("e", "u"), col=c("ivory4", "maroon"), pch=c(19, 18), cex=0.8)
####################################################################
#Heteroscedasticidad y Error de Especificacion
####################################################################
#Limpiar espacio de trabajo
cat("\014")
rm(list = ls())
library(scales)
set.seed(160925)
x <- runif(1000, 0, 10)
e <- rnorm(1000, 0, 1)
#Error de especificación: variable independiente
beta0 <- 10
beta1 <- 0.4
beta2 <- -0.05
y <- beta0 + beta1*x + beta2*x^2 + e
u <- e + beta2*x^2
plot(x, e, col = alpha("ivory4", 0.5), ylim = c(-9, 3), pch = 19, xlab = "x", ylab = " ")
points(x, u, col = alpha("maroon", 0.5), pch = 18)
legend("bottomleft", legend=c("e", "u"), col=c("ivory4", "maroon"), pch=c(19, 18), cex=0.8)
model_het <- lm(y ~ x)
summary(model_het)
model_hom <- lm(y ~ x + x^2)
summary(model_hom)
model_hom <- lm(y ~ x + x^2)
summary(model_hom)
####################################################################
#Heteroscedasticidad y Error de Especificacion
####################################################################
#Limpiar espacio de trabajo
cat("\014")
rm(list = ls())
library(scales)
set.seed(160925)
x <- runif(1000, 0, 10)
e <- rnorm(1000, 0, 1)
#Error de especificación: variable independiente
beta0 <- 10
beta1 <- 0.4
beta2 <- -0.05
y <- beta0 + beta1*x + beta2*x^2 + e
u <- e + beta2*x^2
plot(x, e, col = alpha("ivory4", 0.5), ylim = c(-9, 3), pch = 19, xlab = "x", ylab = " ")
points(x, u, col = alpha("maroon", 0.5), pch = 18)
legend("bottomleft", legend=c("e", "u"), col=c("ivory4", "maroon"), pch=c(19, 18), cex=0.8)
model_het <- lm(y ~ x)
summary(model_het)
x2 <- x^2
model_hom <- lm(y ~ x + x2)
summary(model_hom)
#Limpiar espacio de trabajo
cat("\014")
rm(list = ls())
#Datos
install.packages('haven')
install.packages("sandwich")
install.packages("lmtest")
library('haven')
library('sandwich')
library('lmtest')
link_datos <- 'https://www.dropbox.com/scl/fi/vy1cw4zkgm3op6pzd7lau/skills_data.dta?rlkey=p11n80lk68nzkqigt2dhbtyl9&dl=1'
datos <- read_dta(link_datos)
attach(datos)
# Ejemplo: ajustar un modelo de regresión lineal
model <- lm(ln_fst_wage ~ lit + num + eng
+ program_type_1 + program_type_4 + program_type_3
+ female + age + age_2 + factor(stratum) + factor(educ_madre) + factor(study_field) + factor(test_edition) + factor(grad_year))
summary(model)
matriz_cov_robusta <- vcovHC(model)
coeftest(model, vcov = matriz_cov_robusta)
install.packages("lmtest")
install.packages("sandwich")
install.packages("haven")
# Ejemplo: ajustar un modelo de regresión lineal
model <- lm(ln_fst_wage ~ lit + num + eng
+ program_type_1 + program_type_4 + program_type_3
+ female + age + age_2 + factor(stratum) + factor(educ_madre) + factor(study_field) + factor(test_edition) + factor(grad_year))
summary(model)
View(matriz_cov_robusta)
coeftest(model, vcov = matriz_cov_robusta)
####################################################################
#Heteroscedasticidad y Error de Especificacion
####################################################################
#Limpiar espacio de trabajo
cat("\014")
rm(list = ls())
library(scales)
set.seed(160925)
x <- runif(1000, 0, 10)
e <- rnorm(1000, 0, 1)
#Error de especificación: variable independiente
beta0 <- 10
beta1 <- 0.4
beta2 <- -0.05
y <- beta0 + beta1*x + beta2*x^2 + e
u <- e + beta2*x^2
plot(x, e, col = alpha("ivory4", 0.5), ylim = c(-9, 3), pch = 19, xlab = "x", ylab = " ")
points(x, u, col = alpha("maroon", 0.5), pch = 18)
legend("bottomleft", legend=c("e", "u"), col=c("ivory4", "maroon"), pch=c(19, 18), cex=0.8)
model_het <- lm(y ~ x)
summary(model_het)
x2 <- x^2
model_hom <- lm(y ~ x + x2)
summary(model_hom)
link_datos <- 'https://www.dropbox.com/scl/fi/vy1cw4zkgm3op6pzd7lau/skills_data.dta?rlkey=p11n80lk68nzkqigt2dhbtyl9&dl=1'
datos <- read_dta(link_datos)
attach(datos)
# Ejemplo: ajustar un modelo de regresión lineal
model <- lm(ln_fst_wage ~ lit + num + eng
+ program_type_1 + program_type_4 + program_type_3
+ female + age + age_2 + factor(stratum) + factor(educ_madre) + factor(study_field) + factor(test_edition) + factor(grad_year))
summary(model)
matriz_cov_robusta <- vcovHC(model)
coeftest(model, vcov = matriz_cov_robusta)
#Limpiar espacio de trabajo
cat("\014")
rm(list = ls())
options(scipen=0)
options(digits = 4)
install.packages("fastDummies")
install.packages("haven")
install.packages("fixest")
install.packages("jtools")
install.packages("tidyverse")
install.packages("stargazer")
install.packages("magrittr")
install.packages("margins")
install.packages("caret")
library(fastDummies)
library(haven)
library(fixest)
install.packages("magrittr")
link_datos <- 'https://www.dropbox.com/scl/fi/ng7f1qoig9xxesn8lzp9h/GEIH.dta?rlkey=ws58sutee6n5rjev6p36j27su&st=w4ilis6r&dl=1'
datos <- read_dta(link_datos)
#Muestra Aleatoria
datos <- datos[datos$u<0.02,]
#Participacion Laboral
#Brecha de genero
mujeres <- aggregate(ocupado ~ area, data = datos[datos$mujer ==1, ], FUN = mean)
hombres <- aggregate(ocupado ~ area, data = datos[datos$mujer ==0, ], FUN = mean)
brecha <- mujeres[, 2]-hombres[, 2]
ocupacion <- cbind(mujeres, hombres[, 2], brecha)
names(ocupacion) <- c('ciudad', 'mujeres', 'hombres', 'brecha')
#Crear variables binarias
datos <- dummy_cols(datos, select_columns = c("area"))
#Edad al cuadrado
datos$edad2 <- datos$edad^2
#Describamos los datos
names(datos)
attach(datos)
#Estadisticas descriptivas de las variables
summary(datos)
#------------------------------------------------------------------
#Modelo de Probabilidad Lineal
#------------------------------------------------------------------
#Modelo 1
modelo1 <- lm(ocupado ~ mujer, data = datos)
summ(modelo1, digits = 4)
library(tidyverse)
library(stargazer)
library(magrittr)
library(margins)
library(caret)
modelo1 <- lm(ocupado ~ mujer, data = datos)
summ(modelo1, digits = 4)
#Limpiar espacio de trabajo
cat("\014")
rm(list = ls())
options(scipen=0)
options(digits = 4)
link_datos <- 'https://www.dropbox.com/scl/fi/ng7f1qoig9xxesn8lzp9h/GEIH.dta?rlkey=ws58sutee6n5rjev6p36j27su&st=w4ilis6r&dl=1'
datos <- read_dta(link_datos)
View(datos)
table(datos$mes)
#Modelo sin constante
model <- lm(ocupado ~ 0 + factor(mes), data = datos)
summary(model)
View(datos)
#Modelo con constante
model <- lm(ocupado ~ factor(mes), data = datos)
summary(model)
#Modelo con constante
model <- lm(ocupado ~ factor(mes), data = datos)
summary(model)
cat("\014")
model <- lm(ocupado ~ 0 + factor(mes), data = datos)
summary(model)
#Modelo con constante
model <- lm(ocupado ~ factor(mes), data = datos)
summary(model)
#Diferencia entre hombres y mujeres en el tiempo
mujeres <- aggregate(ocupado ~ mes, data = datos[datos$mujer ==1, ], FUN = mean)
hombres <- aggregate(ocupado ~ mes, data = datos[datos$mujer ==0, ], FUN = mean)
brecha <- mujeres[, 2]-hombres[, 2]
ocupacion <- cbind(mujeres, hombres[, 2], brecha)
names(brecha) <- c('mes', 'mujeres', 'hombres', 'brecha')
View(ocupacion)
model <- lm(ocupado ~ 0 + factor(mes)*mujer, data = datos)
summary(model)
View(ocupacion)
h summary()
?summary()
?t.test()
?hist()
?rnorm()
#Limpiar espacio de trabajo
cat("\014")
rm(list = ls())
set.seed(092025)
edad <- rnorm(1000, 35, 10)
u <- rnorm(1000, 0, 1)
salario <- exp(2.6 + 0.2*edad - 0.0035*edad^2 + u)
plot(edad, log(salario))
datos <- data.frame(salario, edad)
View(datos)
#Limpiar espacio de trabajo
cat("\014")
rm(list = ls())
#Semilla de replicacion
set.seed(092025)
#Simular datos
edad <- rnorm(1000, 35, 10)
edad2 <- edad^2
u <- rnorm(1000, 0, 1)
salario <- exp(2.6 + 0.2*edad - 0.0035*edad2 + u)
log_salario <- log(salario)
#base de datos
datos <- data.frame(salario, log_salario, edad, edad2)
#plot(edad, log(salario))
#summary(lm(log(salario) ~ edad))
View(datos)
#Limpiar espacio de trabajo
cat("\014")
rm(list = ls())
#Semilla de replicacion
set.seed(092025)
#Simular datos
edad <- rnorm(1000, 35, 10)
edad2 <- edad^2
u <- rnorm(1000, 0, 1)
salario <- exp(2.6 + 0.2*edad - 0.0035*edad2 + u)
log_salario <- log(salario)
#base de datos
datos <- data.frame(salario, log_salario, edad, edad2)
#Estadisticas descriptivas
summary(datos[, c('salario', 'edad')])
plot(edad, log(salario))
#summary(lm(log(salario) ~ edad))
#Limpiar espacio de trabajo
cat("\014")
rm(list = ls())
#Semilla de replicacion
set.seed(092025)
#Simular datos
edad <- rnorm(1000, 35, 10)
edad2 <- edad^2
u <- rnorm(1000, 0, 1)
salario <- exp(2.6 + 0.2*edad - 0.0035*edad2 + u)
log_salario <- log(salario)
#base de datos
datos <- data.frame(salario, log_salario, edad, edad2)
#Estadisticas descriptivas
summary(datos[, c('salario', 'edad')])
plot(edad, log_salario)
#Modelo
modelo <- lm(log(salario) ~ edad)
summary(modelo)
?qf
